[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61"]

[project]
authors = [{ name = "The Eradiate Team" }]
description = "A radiative transfer model for the Earth observation community"
license = { text = "LGPLv3" }
maintainers = [{ name = "The Eradiate Team" }]
name = "eradiate"
readme = "resources/README_PyPI.md"
requires-python = ">=3.9,<3.13"
version = "0.31.0-dev0"
dependencies = [
  "aenum",
  "attrs>=22.2",
  "cachetools>=5.3",
  "cerberus>=1.3",
  "click",
  "dessinemoi>=23.1.0",
  "dynaconf>=3.2",
  "joseki>=2.6.0",
  "lazy_loader>=0.1",
  "matplotlib>=3.3",
  "netcdf4",
  "numpy<2", # Capped to avoid Astropy 6.1+ / Python 3.9 conflict, sync with Conda requirement
  "pint",
  "pinttrs>=23.2.0",
  "pooch",
  "rich",
  "ruamel.yaml",
  "scipy",
  "sf-hamilton>=1.40",
  "typer>=0.9.0",
  "tqdm",
  "shellingham!=1.5.1", # Typer dependency; exclude this version which raises while previous don't
  "xarray>=0.19,!=0.20.*,<2025",
  # TODO: The <2025 cap was introduced to protect ourselves from a critical
  #       performance regression, solved in 2025.7. This can should be release
  #       when dropping support for Python 3.9; we will still exclude 2025.{1-6}
]

[project.optional-dependencies]
kernel = ["eradiate-mitsuba==0.3.2"]
recommended = [
  "aabbtree", # Used by the leaf collision detection feature
  "astropy", # Used by the solar irradiance spectrum date-based scaling feature
  "ipython",
  "ipywidgets",
  "jupyterlab",
  "python-dateutil", # Used by the Solar irradiance spectrum date-based scaling feature
  "graphviz", # Used to visualize post-processing pipeline DAGs
  "seaborn", # Used to define the Eradiate plotting style
]

[dependency-groups]
docs = [
  "myst-parser",
  "nbsphinx>=0.9.0",
  "ipython", # Required for syntax highlighting in notebooks
  "pytest", # Required for pytest-related function docs
  "robotframework", # Required for robot-related function docs
  "seaborn",
  "sphinx",
  "sphinxcontrib-bibtex>=2.0",
  "sphinx-autobuild<=2021", # Capped because v2024+ raises
  "sphinx-copybutton",
  "sphinx-design",
  "sphinx-iconify",
  "shibuya",
]
test = [
  "pytest",
  "pytest-cov",
  "pytest-json-report",
  "asv==0.6.*",
  "robotframework",
  "pytest-robotframework",
]
dev = [
  "bump-my-version>=0.28.0,<0.29.0",
  "uv==0.6.*", # Used to lock docs dependencies
]

[project.scripts]
eradiate = "eradiate.cli:main"

[project.urls]
changelog = "https://github.com/eradiate/eradiate/CHANGELOG.md"
documentation = "https://eradiate.readthedocs.io"
repository = "https://github.com/eradiate/eradiate"

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64", "win-64", "osx-64", "osx-arm64"]

[tool.pixi.dependencies]
numpy = "<2" # Be sure to sync with PyPI requirement
pixi-pycharm = ">=0.0.8,<0.0.9"

[tool.pixi.pypi-dependencies]
eradiate = { path = ".", editable = true }

[tool.pixi.feature.docs.dependencies]
pandoc = "*"

[tool.pixi.activation]
scripts = ["setpath.sh"]

[tool.pixi.tasks]
kernel-configure = { cmd = "cmake -S ext/mitsuba -B ext/mitsuba/build -DCMAKE_BUILD_TYPE=Release -GNinja --preset eradiate" }
kernel-build = { cmd = "cmake --build ext/mitsuba/build", depends-on = [
  "kernel-configure",
] }
kernel-clean = { cmd = "rm -rf ext/mitsuba/build/" }
build-kernel = { depends-on = ["kernel-build"] }
wheel-build = { cmd = "python -m build" }
build-wheel = { depends-on = ["wheel-build"] }

[tool.pixi.target.win-64.dependencies]
ninja = "*"

[tool.pixi.target.win-64.activation]
scripts = ["setpath.bat"]

[tool.pixi.feature.py39.dependencies]
python = "3.9.*" # Used to constrain dev environment

[tool.pixi.feature.test.tasks]
doctest = { cmd = "make -C docs doctest" }
test = { cmd = "pytest" }
test-cov = { cmd = "pytest --cov=src/eradiate --cov-report=html --cov-report=json --cov-report=term-missing" }
test-quick = { cmd = "pytest -m \"not slow and not regression\"" }
test-cov-quick = { cmd = "pytest --cov=src/eradiate --cov-report=html --cov-report=json --cov-report=term-missing -m \"not slow and not regression\"" }
test-report = { cmd = """
  pytest -p robotframework
    --robot-tagstatinclude unit
    --robot-tagstatinclude system
    --robot-tagstatinclude regression
    --robot-tagstatinclude slow
""" }
test-unit-report = { cmd = """
  pytest -p robotframework
    --robot-tagstatinclude unit
    --robot-tagstatinclude slow -m unit""" }
test-system-report = { cmd = """
  pytest -p robotframework
    --robot-tagstatinclude system
    --robot-tagstatinclude slow -m system
""" }
test-regression-report = { cmd = """
  pytest -p robotframework
    --robot-tagstatinclude regression
    --robot-tagstatinclude slow -m regression
""" }
test-slow-report = { cmd = """
  pytest -p robotframework
    --robot-tagstatinclude unit
    --robot-tagstatinclude system
    --robot-tagstatinclude regression
    --robot-tagstatinclude slow -m slow
""" }

[tool.pixi.feature.docs.tasks]
docs = { cmd = "make -C docs html && echo \"Documentation index at docs/_build/html/index.html\"" }
docs-build = { depends-on = ["docs"] }
docs-clean = { cmd = "make -C docs clean" }
docs-pdf = { cmd = "make -C docs latexpdf && echo \"Documentation PDF at docs/_build/latex/eradiate.pdf\"" }

[tool.pixi.feature.dev.tasks]
release = { cmd = "python resources/release.py" }
# Version bump
bump = { cmd = "bump-my-version bump --new-version $RELEASE_VERSION" }
bump-show = { cmd = "bump-my-version show-bump" }
bump-dry = { cmd = "bump-my-version bump --new-version $RELEASE_VERSION --dry-run --verbose" }
# Docs build
docs-serve = { cmd = "make -C docs serve" }
docs-linkcheck = { cmd = "make -C docs linkcheck" }
docs-render-tutorials = { cmd = "python tutorials/run.py run" }
# -- Important: If the Python version changes, do not forget to sync it with the
#    'build.tools.python' entry in .readthedocs.yml
docs-lock = { cmd = """
  uv pip compile --upgrade --quiet --no-progress
    --python-version 3.9 --group docs --extra recommended
    --output-file docs/requirements.txt pyproject.toml
""" }

[tool.pixi.environments]
default = { solve-group = "default" }
prod = { features = ["py39", "kernel", "recommended"], solve-group = "default" }
test = { features = ["py39", "recommended", "test"], solve-group = "default" }
dev = { features = [
  "py39",
  "recommended",
  "test",
  "docs",
  "dev",
], solve-group = "default" }

[tool.pytest.ini_options]
addopts = "-p no:robotframework"
filterwarnings = [
  "error",
  # Remove the following when environment issues are solved
  "ignore:numpy.ndarray size changed, may indicate binary incompatibility:RuntimeWarning",
  # Remove the following when transition to NumPy 2 is complete
  "ignore:numpy.core is deprecated and has been renamed to numpy._core.",
  # Remove the warnings coming from deprecated usage of utcnow in Joseki
  "ignore:.*utcnow.*:DeprecationWarning",
]
markers = ["unit", "system", "regression"]
testpaths = "tests"

[tool.coverage.html]
directory = "./reports/coverage/html"

[tool.coverage.json]
output = "./reports/coverage/coverage.json"

[tool.coverage.report]
omit = ["src/*/__init__.py", "src/*/_version.py"]
precision = 2
show_missing = true
skip_covered = true

[tool.coverage.run]
branch = true
parallel = true
source = ["src/"]

[tool.ruff]
exclude = ["docs/_ext/autodocsumm.py", "src/eradiate/test_tools/benchmark/asvdb.py"]
include = ["pyproject.toml", "src/**/*.py", "tests/**/*.py"]

[tool.ruff.lint]
ignore = ["E501", "F821"]
isort = { relative-imports-order = "closest-to-furthest" }
per-file-ignores = { "*.ipynb" = ["E402"] }
select = ["I", "F", "E"]

[tool.setuptools]
include-package-data = true # Required because of package data

[tool.setuptools.package-data]
# Required by PEP 561
# https://mypy.readthedocs.io/en/stable/installed_packages.html#creating-pep-561-compatible-packages
"eradiate" = ["py.typed", "*.pyi"]
"eradiate.config" = ["*.toml"]
"eradiate.data" = ["*.yml"]

[tool.setuptools.packages.find]
include = ["eradiate*"]
namespaces = false
where = ["src"]
